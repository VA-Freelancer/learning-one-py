# множества - похож на списки и кортежы, - не упорядоченная коллекция - не содержит повторяющие элементы, не поддерживает индексирование, цифры выстраивает по порядку, вне зависемости как они расположены 
# s = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}

# print(type(s))
# print(s)
# s2 = set('hello')
# print(type(s2))
# print(s2)
# s4 = {} # создаст пустой словарь
# s5 = set() # создаст пустой словарь
# s3 = {i for i in range(1, 11)}
# print(type(s3))
# print(s3)
# print(type(s4))


# nums = [1, 2, 3, 4, 3, 2, 4, 5, 3, 3]
# nums2 = list(set(nums)) # убираем дубликат и преобразовываем обратно в список
# print(nums2)
# a = set('abracadabra')
# b = set('alacazam')
# print(a, b, sep='\n')

# c = a - b # убираем все буквы в 'a' которые есть в 'b' - так же убирает дубли
# d = a | b # объединение - буквы или в 'a' или в 'b' - так же убирает дубли
# e = a & b # пересечение - буквы которые есть в 'a' и в 'b' - так же убирает дубли
# f = a ^ b # множество из элементов - буквы которые есть в 'a' или в 'b', но не в обоих
# print(c, d, e, f, sep='\n')

s = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}
# методы
# set.copy() - возвращает копию множества
# set.add(elem) - добавляет элемент в множество
# set.remove(elem) - удаляет элемент из множества. KeyError, если такого элемента не существует
# set.discard(elem) - удаляет элемент, если он находится в множестве - если такого елемента нет то ошибки не будет
# set.pop() - возвращает и удаляет первый элемент из множества. Так как множества не упорядочены, нельзя точно сказать, какой элемент будет первым.
# set.clear() - очистка множества
# s = {'apple', 'orange', 'apple', 'pear', 'orange', 'banana'}
# s.add('melon')
# s2 = s.copy()
# print(s, id(s))
# print(s2, id(s2))
# print(s)
# a = frozenset('hello')  # нельзя добавить новый элемент
# print(a)
# for i in s:
#     print(i)